/*
 * Copyright (c) 2011, Willow Garage, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Willow Garage, Inc. nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <stdio.h>

#include <QVBoxLayout>
#include <QHBoxLayout>
#include <QLabel>
#include <QTimer>
#include <QPixmap>
#include <QPushButton>

#include "FailureReport.h"

namespace rls_rviz_plugins
{


FailureReport::FailureReport( QWidget* parent )
  : rviz::Panel( parent )
  , havebunched_( 0 )
  , haveteared_( 0 )
  , haveslipped_( 0 )
{

  QString buttonLabel = "button";
  button = new QPushButton(buttonLabel);
  mypanel = new ForcePanel();
 
  QString file_normal_resource = "/home/xli4217/Dropbox/ros_ws/src/rls_rviz_plugins/icons/normal.png";
  QString file_bunch_resource = "/home/xli4217/Dropbox/ros_ws/src/rls_rviz_plugins/icons/bunch.png";
  QString file_tear_resource = "/home/xli4217/Dropbox/ros_ws/src/rls_rviz_plugins/icons/tear.png";
  QString file_slip_resource = "/home/xli4217/Dropbox/ros_ws/src/rls_rviz_plugins/icons/slip.png";

  normalPix_ = new QPixmap(file_normal_resource);
  bunchPix_ = new QPixmap(file_bunch_resource);
  tearPix_ = new QPixmap(file_tear_resource);
  slipPix_ = new QPixmap(file_slip_resource);

  failureReport_label_ = new QLabel;

  QHBoxLayout* layout = new QHBoxLayout;
    
  layout->addWidget( failureReport_label_ );

  setLayout( layout );

  QTimer* output_timer = new QTimer( this );

  connect( output_timer, SIGNAL( timeout() ), this, SLOT( updateLabel() ));

  // Start the timer.
  output_timer->start( 10 );
 
  rlsSub_ = nh_.subscribe<cisst_msgs::rlsEstData>( "rlsEstData", 1000, &FailureReport::FailureReportCallback, this );
 
}


  void FailureReport::updateLabel()
  {
   
    if(havebunched_ != 0 )
      {
	failureReport_label_->setPixmap(*bunchPix_);
      }
    else if(haveteared_ != 0 ){
      failureReport_label_->setPixmap(*tearPix_);
    }
    else if(haveslipped_ != 0){
      failureReport_label_->setPixmap(*slipPix_);
    }
    else{
      failureReport_label_->setPixmap(*normalPix_);
    }
  }

  
// Save all configuration data from this panel to the given
// Config object.  It is important here that you call save()
// on the parent class so the class id and panel name get saved.
void FailureReport::save( rviz::Config config ) const
{
  rviz::Panel::save( config );
}

// Load all configuration data for this panel from the given Config object.
void FailureReport::load( const rviz::Config& config )
{
  rviz::Panel::load( config );
}

} 

// Tell pluginlib about this class.  Every class which should be
// loadable by pluginlib::ClassLoader must have these two lines
// compiled in its .cpp file, outside of any namespace scope.
#include <pluginlib/class_list_macros.h>
PLUGINLIB_EXPORT_CLASS(rls_rviz_plugins::FailureReport,rviz::Panel )

